{"version":3,"sources":["pages/Client.js","components/InputTextField.js","components/InputSection.js","components/InputBuilder.js","components/WordBuilder.js","pages/Dashboard.js","pages/Splash.js","App.js","serviceWorker.js","index.js"],"names":["Client","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMessageReceived","response","message","payload","JSON","parse","type","audioUrl","url","setState","command","window","location","handleError","status","category","console","log","errorData","pubnub","PubNubReact","subscribeKey","init","assertThisInitialized","state","subscribe","channels","withPresence","addListener","unsubscribe","react_default","a","createElement","className","bundle_default","src","autoPlay","Component","InputTextField","getText","text","handleChanged","event","target","value","TextField_default","multiline","longform","fullWidth","onChange","label","InputSection","data","idx","length","token","refs","String","handleClick","onSend","views","push","key","components_InputTextField","ref","id","viewsForData","IconButton_default","color","variant","onClick","index_es","InputBuilder","addField","newSections","protoSections","addLabel","disabled","margin","section","WordBuilder","numWords","defaultSections","apiUrl","Dashboard","sendText","axios","post","voice","catch","error","sendMessage","publish","stringify","channel","handleFileImport","stopPropagation","preventDefault","file","files","fileReader","FileReader","onload","result","sections","customSections","concat","readAsText","import","upload","click","export","jsonData","dataStr","encodeURIComponent","downloadAnchorNode","document","setAttribute","body","appendChild","remove","catchConvo","csvData","commandlog","join","openModal","modalOpen","closeModal","saveSection","newSection","builder","getSections","handleChangeVoice","kickToInvision","execute","goToActive","goToEmpty","goToFtui","kill","openWordModal","wordModalOpen","closeWordModal","sendWords","terms","wordBuilder","getWords","snackOpen","snackMessage","handleSnackClose","reason","publishKey","_this2","Modal_default","open","Paper_default","components_InputBuilder","Button_default","components_WordBuilder","map","components_InputSection","FormLabel_default","component","FormControl_default","RadioGroup_default","name","FormControlLabel_default","control","Radio_default","style","display","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","Splash","Fab_default","Link","to","role","aria-label","App","BrowserRouter","basename","Route","exact","path","Boolean","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdf0a0fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PubNubReact from 'pubnub-react';\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport '../styles/client.css';\nimport '../styles/global.css';\n\nclass Client extends Component {\n  constructor(props) {\n    super(props);\n    this.pubnub = new PubNubReact({\n        subscribeKey: 'sub-c-634d2abe-28df-11e9-991a-bee2ac9fced0'\n    });\n    this.pubnub.init(this);\n\n    this.state = {\n      url: '',\n    }\n  }\n\n  handleMessageReceived = (response) => {\n    var message = response.message;\n    var payload = JSON.parse(message);\n      \n    if (payload.type === 'audio') {\n      var audioUrl = payload.url;\n      this.setState({ url: audioUrl });\n    }\n    else if (payload.type === 'command') {\n      if (payload.command === 'gotoinvision') {\n        window.location = 'https://invis.io/3RQGIJF2H5C#/346229432_S1/';\n      }\n    }\n  };\n\n  handleError = (status) => {\n    if (status.category === 'PNUnknownCategory') {\n      console.log(status.errorData.message);\n    }\n  };\n\n  componentWillMount() {\n      this.pubnub.subscribe({\n        channels: ['default'],\n        withPresence: true\n      });\n      this.pubnub.addListener({\n        status: this.handleError,\n        message: this.handleMessageReceived\n    });\n  }\n\n  componentWillUnmount() {\n      this.pubnub.unsubscribe({ channels: ['default'] });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"hero\"></div>\n        <div className=\"speechOut\"></div>\n        <ReactAudioPlayer\n          src={this.state.url}\n          autoPlay />\n      </div>\n    );\n  }\n}\n\nexport default Client;\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport '../styles/dashboard.css';\nimport '../styles/global.css';\n\nclass InputTextField extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: ''\n        }\n    }\n\n    getText = () => {\n        return this.state.text;\n    }\n\n    handleChanged = (event) => {\n        this.setState({\n            text: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <TextField\n                multiline={this.props.longform}\n                fullWidth={this.props.longform}\n                onChange={this.handleChanged}\n                label=\"text\" />\n        );\n    }\n}\n\nexport default InputTextField;\n","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Send } from '@material-ui/icons';\r\n\r\nimport '../styles/dashboard.css';\r\nimport '../styles/global.css';\r\nimport InputTextField from './InputTextField';\r\n\r\nclass InputSection extends Component {\r\n    getText = () => {\r\n        var text = '';\r\n        var data = this.props.data;\r\n\r\n        for (var idx = 0; idx < data.length; idx ++) {\r\n            var token = data[idx];\r\n\r\n            if (token === '%input%' || token === '%longform%') {\r\n                var input = this.refs[String(idx)];\r\n\r\n                text += input.getText();\r\n            } else {\r\n                text += token;\r\n            }\r\n\r\n            text += ' ';\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    viewsForData(data) {\r\n        var views = [];\r\n\r\n        for (var idx = 0; idx < data.length; idx ++) {\r\n            var token = data[idx];\r\n\r\n            if (token === '%input%') {\r\n                views.push(\r\n                    <div className=\"input\"\r\n                        key={idx}>\r\n                        <InputTextField\r\n                            ref={String(idx)} />\r\n                    </div>\r\n                );\r\n            }\r\n            else if (token === '%longform%') {\r\n                views.push(\r\n                    <InputTextField\r\n                        longform\r\n                        ref={String(idx)}\r\n                        key={idx} />\r\n                );\r\n            }\r\n            else {\r\n                views.push(\r\n                    <h4\r\n                        id={String(idx)}\r\n                        key={idx}>\r\n                        {token}\r\n                    </h4>\r\n                );\r\n            }\r\n        }\r\n\r\n        return views;\r\n    }\r\n\r\n    handleClick = () => {\r\n        var text = this.getText();\r\n        this.props.onSend(text);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"section\">\r\n                    { this.viewsForData(this.props.data) }\r\n                </div>\r\n                {this.props.onSend == null ? null : (\r\n                    <div className=\"buttons\">\r\n                        <IconButton\r\n                            className=\"iconButton\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={this.handleClick}>\r\n                            <Send />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputSection;\r\n","import React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport { AddBox, TextFields } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\n\nimport InputTextField from './InputTextField';\nimport '../styles/dashboard.css';\nimport '../styles/global.css';\n\nclass InputBuilder extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            protoSections: ['text']\n        }\n    }\n    viewsForData() {\n        var views = [];\n\n        for (var idx = 0; idx < this.state.protoSections.length; idx ++) {\n            var token = this.state.protoSections[idx];\n\n            if (token === 'text') {\n                views.push(\n                    <div className=\"input\"\n                        key={idx}>\n                        <InputTextField\n                            ref={String(idx)} />\n                    </div>);\n            } else {\n                views.push(\n                    <TextField\n                        disabled\n                        key={idx}\n                        label=\"wildcard\"\n                        variant=\"outlined\"\n                        margin=\"normal\" />\n                );\n            }\n        }\n\n        return views;\n    }\n\n    addField = () => {\n        var newSections = this.state.protoSections;\n\n        newSections.push('text');\n\n        this.setState({ protoSections: newSections });\n    }\n\n    addLabel = () => {\n        var newSections = this.state.protoSections;\n\n        newSections.push('%input%');\n\n        this.setState({ protoSections: newSections });\n    }\n\n    getSections() {\n        var section = []\n\n        for (var idx = 0; idx < this.state.protoSections.length; idx ++) {\n            var token = this.state.protoSections[idx];\n\n            if (token === 'text') {\n                section.push(this.refs[String(idx)].getText());\n            } else {\n                section.push(token);\n            }\n        }\n\n        return section;\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"section\">\n                    { this.viewsForData() }\n                </div>\n                <div className=\"buttons\">\n                    <IconButton\n                        onClick={this.addField}\n                        className=\"iconButton\"\n                        variant=\"contained\"\n                        color=\"primary\">\n                        <TextFields />\n                    </IconButton>\n                    <IconButton\n                        onClick={this.addLabel}\n                        className=\"iconButton\"\n                        variant=\"contained\"\n                        color=\"primary\">\n                        <AddBox />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InputBuilder;\n","import React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport { AddBox, TextFields } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\n\nimport InputTextField from './InputTextField';\nimport '../styles/dashboard.css';\nimport '../styles/global.css';\n\nclass WordBuilder extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            numWords: 1\n        }\n    }\n    viewsForData() {\n        var views = [];\n\n        for (var idx = 0; idx < this.state.numWords; idx ++) {\n          views.push(\n            <div className=\"input\"\n                key={idx}>\n                <InputTextField\n                    ref={String(idx)} />\n            </div>);\n        }\n\n        return views;\n    }\n\n    addField = () => {\n      this.setState({ numWords: this.state.numWords + 1});\n    }\n\n    getWords() {\n        var section = []\n\n        for (var idx = 0; idx < this.state.numWords; idx ++) {\n          var text = this.refs[String(idx)].getText();\n          if (text !== '') {\n            section.push(text);\n          }\n        }\n\n        return section;\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"wordsection\">\n                    { this.viewsForData() }\n                </div>\n                <div className=\"buttons\">\n                    <IconButton\n                        onClick={this.addField}\n                        className=\"iconButton\"\n                        variant=\"contained\"\n                        color=\"primary\">\n                        <TextFields />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default WordBuilder;\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Close } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport PubNubReact from 'pubnub-react';\r\n\r\nimport InputSection from '../components/InputSection';\r\nimport '../styles/dashboard.css';\r\nimport '../styles/global.css';\r\nimport InputBuilder from '../components/InputBuilder';\r\nimport WordBuilder from '../components/WordBuilder';\r\n\r\nconst defaultSections = [\r\n  [\"Hey\", \"%input%\", \"how are you feeling today?\"],\r\n  [\"What was something good that happened today?\"],\r\n  [\"What was something bad that happened today?\"],\r\n  [\"What is something coming up that you’re worried about?\"],\r\n  [\"Can I help with that by setting a reminder to do something?\"]\r\n]\r\n\r\nconst apiUrl = \"https://puppet-233810.appspot.com\"\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      customSections: [],\r\n      modalOpen: false,\r\n      voice: 'en-US-Wavenet-E',\r\n      snackOpen: false,\r\n      snackMessage: '',\r\n      wordModalOpen: false,\r\n    }\r\n\r\n    this.commandlog = [];\r\n\r\n    this.pubnub = new PubNubReact({\r\n      publishKey: 'pub-c-35c0a342-eb63-440b-b688-89d8ced6f499',\r\n      subscribeKey: 'sub-c-634d2abe-28df-11e9-991a-bee2ac9fced0'\r\n    });\r\n    this.pubnub.init(this);\r\n  }\r\n\r\n  sendText = (text) => {\r\n    axios\r\n      .post(apiUrl + '/broadcast', {\r\n        text: text,\r\n        voice: this.state.voice,\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  sendMessage = (message) => {\r\n    var payload = {\r\n      type: 'internal',\r\n      message: message\r\n    };\r\n\r\n    this.pubnub.publish({\r\n      message: JSON.stringify(payload),\r\n      channel: 'default'\r\n    },\r\n    function(status, response) {\r\n      if (status.error) { console.log(status); }\r\n    });\r\n  }\r\n\r\n  handleFileImport = (event) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    var file = event.target.files[0];\r\n    var fileReader = new FileReader( );\r\n    fileReader.onload = (event) => {\r\n      var newSections = JSON.parse(event.target.result);\r\n      var sections = this.state.customSections;\r\n\r\n      this.setState({ customSections: sections.concat(newSections) });\r\n    };\r\n    fileReader.readAsText( file );\r\n  }\r\n\r\n  import = () => {\r\n    this.upload.click();\r\n  }\r\n\r\n  export = () => {\r\n    var jsonData = JSON.stringify(this.state.customSections);\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(jsonData);\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", \"puppet-responses.json\");\r\n    document.body.appendChild(downloadAnchorNode);\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n  }\r\n\r\n  catchConvo = () => {\r\n    var csvData = \"text,url\\n\" + this.commandlog.join(\"\\n\");\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(csvData);\r\n    var downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", \"puppet-log.csv\");\r\n    document.body.appendChild(downloadAnchorNode);\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n  }\r\n\r\n  openModal = () => {\r\n    this.setState({modalOpen: true});\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({modalOpen: false});\r\n  }\r\n\r\n  saveSection = () => {\r\n    var sections = this.state.customSections;\r\n    var newSection = this.builder.getSections();\r\n\r\n    sections.push(newSection);\r\n\r\n    this.setState({ customSections: sections });\r\n    this.closeModal();\r\n  }\r\n\r\n  handleChangeVoice = event => {\r\n    this.setState({ voice: event.target.value });\r\n  };\r\n\r\n  kickToInvision = () => {\r\n    this.execute('gotoinvision');\r\n  };\r\n\r\n  goToActive = () => {\r\n    this.execute('active');\r\n  }\r\n\r\n  goToEmpty = () => {\r\n    this.execute('empty');\r\n  }\r\n\r\n  goToFtui = () => {\r\n    this.execute('ftui');\r\n  }\r\n\r\n  kill = () => {\r\n    this.execute('kill');\r\n  }\r\n\r\n  openWordModal = () => {\r\n    this.setState({ wordModalOpen: true });\r\n  }\r\n\r\n  closeWordModal = () => {\r\n    this.setState({ wordModalOpen: false });\r\n  }\r\n\r\n  sendWords = () => {\r\n    var terms = this.wordBuilder.getWords();\r\n    var payload = {\r\n      type: 'terms',\r\n      terms: terms\r\n    };\r\n\r\n    this.pubnub.publish({\r\n      message: JSON.stringify(payload),\r\n      channel: 'default'\r\n    },\r\n    function(status, response) {\r\n      if (status.error) { console.log(status); }\r\n\r\n      this.setState({\r\n        snackOpen: true,\r\n        snackMessage: \"Vooey: Terms were sent!\",\r\n      });\r\n    });\r\n    this.closeWordModal();\r\n  }\r\n\r\n  execute = (command) => {\r\n    var payload = { type: 'command', command: command };\r\n    this.pubnub.publish({\r\n      message: JSON.stringify(payload),\r\n      channel: 'default'\r\n    },\r\n    function(status, response) {\r\n      if (status.error) { console.log(status); }\r\n    });\r\n  }\r\n\r\n  handleMessageReceived = (response) => {\r\n    var message = response.message;\r\n    var payload = JSON.parse(message);\r\n      \r\n    if (payload.type === 'internal') {\r\n      this.setState({\r\n        snackOpen: true,\r\n        snackMessage: payload.message,\r\n      });\r\n    }\r\n    else if (payload.type === 'audio') {\r\n      this.commandlog.push(payload.text + \",\" + payload.url);\r\n    }\r\n  };\r\n\r\n  handleError = (status) => {\r\n    if (status.category === 'PNUnknownCategory') {\r\n      console.log(status.errorData.message);\r\n    }\r\n  };\r\n\r\n  handleSnackClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      snackOpen: false,\r\n      snackMessage: '',\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.pubnub.subscribe({\r\n      channels: ['default'],\r\n      withPresence: false\r\n    });\r\n    this.pubnub.addListener({\r\n      status: this.handleError,\r\n      message: this.handleMessageReceived\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this.pubnub.unsubscribe({ channels: ['default'] });\r\n  }\r\n\r\n  render() {\r\n    const sections = defaultSections.concat(this.state.customSections);\r\n    return (\r\n      <div className=\"container\">\r\n        <Modal \r\n          className=\"modal-container\"\r\n          open={this.state.modalOpen}>\r\n          <Paper className=\"paper-modal\">\r\n              <div className=\"header\">\r\n                <IconButton\r\n                  onClick={this.closeModal}\r\n                  className=\"iconButton\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\">\r\n                  <Close />\r\n                </IconButton>\r\n              </div>\r\n\r\n              <InputBuilder\r\n                ref={(builder) => {\r\n                  this.builder = builder\r\n                }} />\r\n\r\n              <div className=\"modal-footer\">\r\n                <Button \r\n                  onClick={this.saveSection}\r\n                  className=\"footer-button\"\r\n                  variant=\"contained\" \r\n                  color=\"primary\">\r\n                  Save\r\n                </Button>\r\n              </div>\r\n          </Paper>\r\n        </Modal>\r\n        <Modal\r\n          className=\"modal-container\"\r\n          open={this.state.wordModalOpen}>\r\n          <Paper className=\"paper-modal\">\r\n            <div className=\"header\">\r\n                <IconButton\r\n                  onClick={this.closeWordModal}\r\n                  className=\"iconButton\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\">\r\n                  <Close />\r\n                </IconButton>\r\n              </div>\r\n              <WordBuilder\r\n                ref={(wordBuilder) => {\r\n                  this.wordBuilder = wordBuilder\r\n                }} />\r\n              <div className=\"modal-footer\">\r\n                <Button \r\n                  onClick={this.sendWords}\r\n                  className=\"footer-button\"\r\n                  variant=\"contained\" \r\n                  color=\"primary\">\r\n                  Send\r\n                </Button>\r\n              </div>\r\n          </Paper>\r\n        </Modal>\r\n        <Paper className=\"paper-container\">\r\n            <div className=\"body\">\r\n              <div className=\"inputs\">\r\n                <div className=\"scrollable\">\r\n                { sections.map((section, idx) => (\r\n                  <InputSection\r\n                    data={section}\r\n                    key={idx}\r\n                    onSend={this.sendText} />\r\n                ))}\r\n                </div>\r\n                <InputSection\r\n                    data={['%longform%']}\r\n                    onSend={this.sendText} />\r\n                <div className=\"vertical-spacer\" />\r\n                <FormLabel component=\"legend\">Internal Chat</FormLabel>\r\n                <InputSection\r\n                  data={['%longform%']}\r\n                  onSend={this.sendMessage} />\r\n              </div>\r\n              <div className=\"voice-box\">\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">Voice</FormLabel>\r\n                  <RadioGroup\r\n                    name=\"gender1\"\r\n                    value={this.state.voice}\r\n                    onChange={this.handleChangeVoice}>\r\n                    <FormControlLabel value=\"en-US-Wavenet-A\" control={<Radio />} label=\"Wavenet A (Male)\"/>\r\n                    <FormControlLabel value=\"en-US-Wavenet-B\" control={<Radio />} label=\"Wavenet B (Male)\" />\r\n                    <FormControlLabel value=\"en-US-Wavenet-D\" control={<Radio />} label=\"Wavenet D (Male)\" />\r\n                    <FormControlLabel value=\"en-US-Wavenet-C\" control={<Radio />} label=\"Wavenet C (Female)\" />\r\n                    <FormControlLabel value=\"en-US-Wavenet-E\" control={<Radio />} label=\"Wavenet E (Female)\" />\r\n                    <FormControlLabel value=\"en-US-Wavenet-F\" control={<Radio />} label=\"Wavenet F (Female)\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n            <div className=\"footer\">\r\n              <input\r\n                type=\"file\"\r\n                ref={(ref) => this.upload = ref}\r\n                style={{display: 'none'}}\r\n                onChange={this.handleFileImport} />\r\n              <Button\r\n                onClick={this.import}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Import\r\n              </Button>\r\n              <Button\r\n                onClick={this.export}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Export\r\n              </Button>\r\n              <Button \r\n                onClick={this.openModal}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Add New...\r\n              </Button>\r\n              <Button \r\n                onClick={this.catchConvo}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Download Log\r\n              </Button>\r\n              <Button\r\n                onClick={this.kickToInvision}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Go To Invision\r\n              </Button>\r\n            </div>\r\n            <div className=\"footer\">\r\n              <Button\r\n                onClick={this.goToEmpty}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Go To Empty\r\n              </Button>\r\n              <Button\r\n                onClick={this.goToActive}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Go To Active\r\n              </Button>\r\n              <Button\r\n                onClick={this.openWordModal}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Send Words\r\n              </Button>\r\n              <Button\r\n                disabled\r\n                onClick={this.goToFtui}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Go To FTUI\r\n              </Button>\r\n              <Button\r\n                onClick={this.kill}\r\n                className=\"footer-button\"\r\n                variant=\"contained\" \r\n                color=\"primary\">\r\n                Kill App\r\n              </Button>\r\n            </div>\r\n            \r\n        </Paper>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          autoHideDuration={6000}\r\n          open={this.state.snackOpen}\r\n          onClose={this.handleSnackClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{this.state.snackMessage}</span>}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SentimentVerySatisfied, SentimentDissatisfied, SentimentVeryDissatisfied } from '@material-ui/icons';\nimport Fab from '@material-ui/core/Fab';\n\nimport '../styles/splash.css';\nimport '../styles/global.css';\n\nclass Splash extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <h1>Hi, what is your mood?</h1>\n          <div className=\"fab-container\">\n            <Fab\n              className=\"startButton\"\n              component={Link}\n              to=\"/client\"\n              color=\"primary\">\n              <SentimentVerySatisfied />\n            </Fab>\n            <Fab\n              className=\"startButton\"\n              component={Link}\n              to=\"/client\"\n              color=\"primary\">\n              <SentimentDissatisfied />\n            </Fab>\n            <Fab\n              className=\"startButton\"\n              component={Link}\n              to=\"/client\"\n              color=\"primary\">\n              <SentimentVeryDissatisfied />\n            </Fab>\n          </div>\n        </div>\n        <div className=\"container\">\n          <Link\n            to=\"/dashboard\">\n            Dashboard <span role=\"img\" aria-label=\"arrow\">➡️</span>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Splash;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport './styles/global.css';\n\nimport Client from './pages/Client';\nimport Dashboard from './pages/Dashboard';\nimport Splash from './pages/Splash';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter\n        basename=\"/puppet\">\n        <div>\n          <Route exact path=\"/\" component={Splash} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/client\" component={Client} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'typeface-roboto';\r\n\r\nReactDOM.render(<App />, \r\n                document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}