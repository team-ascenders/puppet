{"version":3,"sources":["pages/Client.js","components/InputTextField.js","components/InputSection.js","components/InputBuilder.js","pages/Dashboard.js","pages/Splash.js","App.js","serviceWorker.js","index.js"],"names":["Client","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMessageReceived","message","audioUrl","JSON","parse","url","setState","handleError","status","category","console","log","errorData","pubnub","PubNubReact","subscribeKey","init","assertThisInitialized","state","subscribe","channels","withPresence","addListener","unsubscribe","react_default","a","createElement","className","bundle_default","src","autoPlay","Component","InputTextField","getText","text","handleChanged","event","target","value","TextField_default","onChange","label","InputSection","data","idx","length","token","refs","String","handleClick","onSend","views","push","key","components_InputTextField","ref","id","viewsForData","IconButton_default","color","variant","onClick","index_es","InputBuilder","addField","newSections","protoSections","addLabel","disabled","margin","section","defaultSections","apiUrl","Dashboard","sendText","axios","post","voice","then","response","catch","error","handleFileImport","stopPropagation","preventDefault","file","files","fileReader","FileReader","onload","result","sections","customSections","concat","readAsText","import","upload","click","export","jsonData","stringify","dataStr","encodeURIComponent","downloadAnchorNode","document","setAttribute","body","appendChild","remove","openModal","modalOpen","closeModal","saveSection","newSection","builder","getSections","handleChangeVoice","_this2","Modal_default","open","Paper_default","components_InputBuilder","Button_default","map","components_InputSection","FormControl_default","component","FormLabel_default","RadioGroup_default","name","FormControlLabel_default","control","Radio_default","type","style","display","Splash","Fab_default","Link","to","App","BrowserRouter","basename","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4a9492f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PubNubReact from 'pubnub-react';\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport '../styles/client.css';\nimport '../styles/global.css';\n\nclass Client extends Component {\n  constructor(props) {\n    super(props);\n    this.pubnub = new PubNubReact({\n        subscribeKey: 'sub-c-634d2abe-28df-11e9-991a-bee2ac9fced0'\n    });\n    this.pubnub.init(this);\n\n    this.state = {\n      url: ''\n    }\n  }\n\n  handleMessageReceived = (message) => {\n    var payload = JSON.parse(message.message);\n    var audioUrl = payload.url;\n\n    this.setState({ url: '' });\n    this.setState({ url: audioUrl });\n  };\n\n  handleError = (status) => {\n    if (status.category === 'PNUnknownCategory') {\n      console.log(status.errorData.message);\n    }\n  };\n\n  componentWillMount() {\n      this.pubnub.subscribe({\n        channels: ['default'],\n        withPresence: true\n      });\n      this.pubnub.addListener({\n        status: this.handleError,\n        message: this.handleMessageReceived\n    });\n  }\n\n  componentWillUnmount() {\n      this.pubnub.unsubscribe({ channels: ['default'] });\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"hero\"></div>\n        <div className=\"speechOut\"></div>\n        <ReactAudioPlayer\n          src={this.state.url}\n          autoPlay />\n      </div>\n    );\n  }\n}\n\nexport default Client;\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport '../styles/dashboard.css';\nimport '../styles/global.css';\n\nclass InputTextField extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: ''\n        }\n    }\n\n    getText = () => {\n        return this.state.text;\n    }\n\n    handleChanged = (event) => {\n        this.setState({\n            text: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <TextField\n                onChange={this.handleChanged}\n                label=\"text\" />\n        );\n    }\n}\n\nexport default InputTextField;\n","import React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Send } from '@material-ui/icons';\n\nimport '../styles/dashboard.css';\nimport '../styles/global.css';\nimport InputTextField from './InputTextField';\n\nclass InputSection extends Component {\n    getText = () => {\n        var text = '';\n        var data = this.props.data;\n\n        for (var idx = 0; idx < data.length; idx ++) {\n            var token = data[idx];\n\n            if (token === '%input%') {\n                var input = this.refs[String(idx)];\n\n                text += input.getText();\n            } else {\n                text += token;\n            }\n\n            text += ' ';\n        }\n\n        return text;\n    }\n\n    viewsForData(data) {\n        var views = [];\n\n        for (var idx = 0; idx < data.length; idx ++) {\n            var token = data[idx];\n\n            if (token === '%input%') {\n                views.push(\n                    <div className=\"input\"\n                        key={idx}>\n                        <InputTextField\n                            ref={String(idx)} />\n                    </div>\n                );\n            } else {\n                views.push(\n                    <h4\n                        id={String(idx)}\n                        key={idx}>\n                        {token}\n                    </h4>\n                );\n            }\n        }\n\n        return views;\n    }\n\n    handleClick = () => {\n        var text = this.getText();\n        this.props.onSend(text);\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"section\">\n                    { this.viewsForData(this.props.data) }\n                </div>\n                {this.props.onSend == null ? null : (\n                    <div className=\"buttons\">\n                        <IconButton\n                            className=\"iconButton\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={this.handleClick}>\n                            <Send />\n                        </IconButton>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default InputSection;\n","import React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport { AddBox, TextFields } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\n\nimport InputTextField from './InputTextField';\nimport '../styles/dashboard.css';\nimport '../styles/global.css';\n\nclass InputBuilder extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            protoSections: ['text']\n        }\n    }\n    viewsForData() {\n        var views = [];\n\n        for (var idx = 0; idx < this.state.protoSections.length; idx ++) {\n            var token = this.state.protoSections[idx];\n\n            if (token === 'text') {\n                views.push(\n                    <div className=\"input\"\n                        key={idx}>\n                        <InputTextField\n                            ref={String(idx)} />\n                    </div>);\n            } else {\n                views.push(\n                    <TextField\n                        disabled\n                        key={idx}\n                        label=\"wildcard\"\n                        variant=\"outlined\"\n                        margin=\"normal\" />\n                );\n            }\n        }\n\n        return views;\n    }\n\n    addField = () => {\n        var newSections = this.state.protoSections;\n\n        newSections.push('text');\n\n        this.setState({ protoSections: newSections });\n    }\n\n    addLabel = () => {\n        var newSections = this.state.protoSections;\n\n        newSections.push('%input%');\n\n        this.setState({ protoSections: newSections });\n    }\n\n    getSections() {\n        var section = []\n\n        for (var idx = 0; idx < this.state.protoSections.length; idx ++) {\n            var token = this.state.protoSections[idx];\n\n            if (token === 'text') {\n                section.push(this.refs[String(idx)].getText());\n            } else {\n                section.push(token);\n            }\n        }\n\n        return section;\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"section\">\n                    { this.viewsForData() }\n                </div>\n                <div className=\"buttons\">\n                    <IconButton\n                        onClick={this.addField}\n                        className=\"iconButton\"\n                        variant=\"contained\"\n                        color=\"primary\">\n                        <TextFields />\n                    </IconButton>\n                    <IconButton\n                        onClick={this.addLabel}\n                        className=\"iconButton\"\n                        variant=\"contained\"\n                        color=\"primary\">\n                        <AddBox />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InputBuilder;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Modal from '@material-ui/core/Modal';\nimport Paper from '@material-ui/core/Paper';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Close } from '@material-ui/icons';\nimport axios from 'axios';\n\nimport InputSection from '../components/InputSection';\nimport '../styles/dashboard.css';\nimport '../styles/global.css';\nimport InputBuilder from '../components/InputBuilder';\n\nconst defaultSections = [\n  [\"Hi\",\"%input%\",\"how's your day so far?\"],\n  [\"What would you like to talk about in particular?\"],\n  [\"What's in your orbit?\"]\n]\n\nconst apiUrl = \"https://puppet-230708.appspot.com\"\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      customSections: [],\n      modalOpen: false,\n      voice: 'en-US-Wavenet-D'\n    }\n  }\n\n  sendText = (text) => {\n    axios\n      .post(apiUrl + '/broadcast', {\n        text: text,\n        voice: this.state.voice,\n      })\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  handleFileImport = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    var file = event.target.files[0];\n    var fileReader = new FileReader( );\n    fileReader.onload = (event) => {\n      var newSections = JSON.parse(event.target.result);\n      var sections = this.state.customSections;\n\n      this.setState({ customSections: sections.concat(newSections) });\n    };\n    fileReader.readAsText( file );\n  }\n\n  import = () => {\n    this.upload.click();\n  }\n\n  export = () => {\n    var jsonData = JSON.stringify(this.state.customSections);\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(jsonData);\n    var downloadAnchorNode = document.createElement('a');\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", \"puppet-responses.json\");\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  }\n\n  openModal = () => {\n    this.setState({modalOpen: true});\n  }\n\n  closeModal = () => {\n    this.setState({modalOpen: false});\n  }\n\n  saveSection = () => {\n    var sections = this.state.customSections;\n    var newSection = this.builder.getSections();\n\n    sections.push(newSection);\n\n    this.setState({ customSections: sections });\n    this.closeModal();\n  }\n\n  handleChangeVoice = event => {\n    this.setState({ voice: event.target.value });\n  };\n\n  render() {\n    const sections = defaultSections.concat(this.state.customSections);\n    return (\n      <div className=\"container\">\n        <Modal \n          className=\"modal-container\"\n          open={this.state.modalOpen}>\n          <Paper className=\"paper-modal\">\n              <div className=\"header\">\n                <IconButton\n                  onClick={this.closeModal}\n                  className=\"iconButton\"\n                  variant=\"contained\"\n                  color=\"primary\">\n                  <Close />\n                </IconButton>\n              </div>\n\n              <InputBuilder\n                ref={(builder) => {\n                  this.builder = builder\n                }} />\n\n              <div className=\"modal-footer\">\n                <Button \n                  onClick={this.saveSection}\n                  className=\"footer-button\"\n                  variant=\"contained\" \n                  color=\"primary\">\n                  Save\n                </Button>\n              </div>\n          </Paper>\n        </Modal>\n        <Paper className=\"paper-container\">\n            <div className=\"body\">\n              <div className=\"inputs\">\n                { sections.map((section, idx) => (\n                  <InputSection\n                    data={section}\n                    key={idx}\n                    onSend={this.sendText} />\n                ))}\n                <InputSection\n                    data={['%input%']}\n                    onSend={this.sendText} />\n              </div>\n              <div className=\"voice-box\">\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Voice</FormLabel>\n                  <RadioGroup\n                    name=\"gender1\"\n                    value={this.state.voice}\n                    onChange={this.handleChangeVoice}>\n                    <FormControlLabel value=\"en-US-Wavenet-A\" control={<Radio />} label=\"Wavenet A (Male)\"/>\n                    <FormControlLabel value=\"en-US-Wavenet-B\" control={<Radio />} label=\"Wavenet B (Male)\" />\n                    <FormControlLabel value=\"en-US-Wavenet-D\" control={<Radio />} label=\"Wavenet D (Male)\" />\n                    <FormControlLabel value=\"en-US-Wavenet-C\" control={<Radio />} label=\"Wavenet C (Female)\" />\n                    <FormControlLabel value=\"en-US-Wavenet-E\" control={<Radio />} label=\"Wavenet E (Female)\" />\n                    <FormControlLabel value=\"en-US-Wavenet-F\" control={<Radio />} label=\"Wavenet F (Female)\" />\n                  </RadioGroup>\n                </FormControl>\n              </div>\n            </div>\n            <div className=\"footer\">\n              <input\n                type=\"file\"\n                ref={(ref) => this.upload = ref}\n                style={{display: 'none'}}\n                onChange={this.handleFileImport} />\n              <Button\n                onClick={this.import}\n                className=\"footer-button\"\n                variant=\"contained\" \n                color=\"primary\">\n                Import\n              </Button>\n              <Button\n                onClick={this.export}\n                className=\"footer-button\"\n                variant=\"contained\" \n                color=\"primary\">\n                Export\n              </Button>\n              <Button \n                onClick={this.openModal}\n                className=\"footer-button\"\n                variant=\"contained\" \n                color=\"primary\">\n                Add New...\n              </Button>\n            </div>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { SentimentSatisfied, SentimentDissatisfied, SentimentVeryDissatisfied } from '@material-ui/icons';\nimport Fab from '@material-ui/core/Fab';\n\nimport '../styles/splash.css';\nimport '../styles/global.css';\n\nclass Splash extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <h1>Hi Alice, what is your mood?</h1>\n            <Fab\n              className=\"startButton\"\n              component={Link}\n              to=\"/client\"\n              color=\"primary\">\n              <SentimentSatisfied />\n            </Fab>\n            <Fab\n              className=\"startButton\"\n              component={Link}\n              to=\"/client\"\n              color=\"primary\">\n              <SentimentDissatisfied />\n            </Fab>\n            <Fab\n              className=\"startButton\"\n              component={Link}\n              to=\"/client\"\n              color=\"primary\">\n              <SentimentVeryDissatisfied />\n            </Fab>\n        </div>\n        <div className=\"container\">\n          <Link\n            to=\"/dashboard\">\n            Dashboard ➡️\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Splash;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport './styles/global.css';\n\nimport Client from './pages/Client';\nimport Dashboard from './pages/Dashboard';\nimport Splash from './pages/Splash';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter\n        basename=\"/puppet\">\n        <div>\n          <Route exact path=\"/\" component={Splash} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/client\" component={Client} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, \n                document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}